// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Rol{
  cveRol Int @id @default(autoincrement())
  descripcion String @db.VarChar(250)
  clave String @db.VarChar(45)
  activo Boolean

  Usuario Usuario[]
}

model Categoria{
  cveCategoria Int @id @default(autoincrement())
  descripcion String @db.VarChar(250)
  activo Boolean
  

  Producto Producto[]
}

model Usuario{
  cveUsuario Int @id @default(autoincrement())
  nombre String @db.VarChar(350)
  apellidos String @db.VarChar(350)
  username String @db.VarChar(350)
  password String @db.VarChar(350)
  fechaRegistro DateTime @default(now())
  cveRol Int
  rol Rol @relation(fields: [cveRol],references: [cveRol])

  Venta Venta[]
}

model Producto{
  cveProducto Int @id @default(autoincrement())
  descripcion String @db.VarChar(350)
  precio Float
  cantidad Int
  cveCategoria Int
  categoria Categoria @relation(fields: [cveCategoria], references: [cveCategoria])

  DetalleVenta DetalleVenta[]
}

model Venta{
  cveVenta Int @id @default(autoincrement())
  totalVenta Float
  fechaVenta DateTime @default(now())
  cveUsuario Int
  usuario Usuario @relation(fields: [cveUsuario], references: [cveUsuario])

  DetalleVenta DetalleVenta[]
}

model DetalleVenta{
  cveDetalleVenta Int @id @default(autoincrement())
  cantidad Int
  precioProducto Float
  cveProducto Int
  cveVenta Int
  producto Producto @relation(fields: [cveProducto], references: [cveProducto])
  venta Venta @relation(fields: [cveVenta], references: [cveVenta])
}